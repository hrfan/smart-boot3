<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smart.system.user.mapper.SmartUserMapper">

    <!-- 用户信息结果映射 -->
    <resultMap id="BaseResultMap" type="com.smart.system.user.entity.SmartUser">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="dept_id" property="deptId" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="user_type" property="userType" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phonenumber" property="phonenumber" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="CHAR"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="CHAR"/>
        <result column="del_flag" property="delFlag" jdbcType="CHAR"/>
        <result column="login_ip" property="loginIp" jdbcType="VARCHAR"/>
        <result column="login_date" property="loginDate" jdbcType="TIMESTAMP"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="create_user_name" property="createUserName" jdbcType="VARCHAR"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="update_user_name" property="updateUserName" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="tenant_id" property="tenantId" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        id, dept_id, user_name, nick_name, user_type, email, phonenumber, sex, avatar, password,
        status, del_flag, login_ip, login_date, create_by, create_time, create_user_name,
        update_by, update_time, update_user_name, remark, tenant_id
    </sql>

    <!-- 根据用户ID查询用户信息 -->
    <select id="selectByUserId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM smart_user
        WHERE id = #{id}
        AND del_flag = '0'
    </select>

    <!-- 根据用户账号查询用户信息 -->
    <select id="selectByUserName" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM smart_user
        WHERE user_name = #{userName}
        AND del_flag = '0'
    </select>

    <!-- 根据邮箱查询用户信息 -->
    <select id="selectByEmail" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM smart_user
        WHERE email = #{email}
        AND del_flag = '0'
    </select>

    <!-- 根据手机号查询用户信息 -->
    <select id="selectByPhonenumber" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM smart_user
        WHERE phonenumber = #{phonenumber}
        AND del_flag = '0'
    </select>

    <!-- 根据部门ID查询用户列表 -->
    <select id="selectByDeptId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM smart_user
        WHERE dept_id = #{deptId}
        AND del_flag = '0'
        ORDER BY create_time DESC
    </select>

    <!-- 根据状态查询用户列表 -->
    <select id="selectByStatus" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM smart_user
        WHERE status = #{status}
        AND del_flag = '0'
        ORDER BY create_time DESC
    </select>

    <!-- 根据用户类型查询用户列表 -->
    <select id="selectByUserType" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM smart_user
        WHERE user_type = #{userType}
        AND del_flag = '0'
        ORDER BY create_time DESC
    </select>

    <!-- 检查用户名是否存在 -->
    <select id="countByUserName" resultType="int">
        SELECT COUNT(1)
        FROM smart_user
        WHERE user_name = #{userName}
        AND del_flag = '0'
        <if test="excludeId != null and excludeId != ''">
            AND id != #{excludeId}
        </if>
    </select>

    <!-- 检查邮箱是否存在 -->
    <select id="countByEmail" resultType="int">
        SELECT COUNT(1)
        FROM smart_user
        WHERE email = #{email}
        AND del_flag = '0'
        <if test="excludeId != null and excludeId != ''">
            AND id != #{excludeId}
        </if>
    </select>

    <!-- 检查手机号是否存在 -->
    <select id="countByPhonenumber" resultType="int">
        SELECT COUNT(1)
        FROM smart_user
        WHERE phonenumber = #{phonenumber}
        AND del_flag = '0'
        <if test="excludeId != null and excludeId != ''">
            AND id != #{excludeId}
        </if>
    </select>

    <!-- 更新登录信息 -->
    <update id="updateLoginInfo">
        UPDATE smart_user
        SET login_ip = #{loginIp},
            login_date = #{loginDate},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 更新用户状态 -->
    <update id="updateStatus">
        UPDATE smart_user
        SET status = #{status},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 更新用户密码 -->
    <update id="updatePassword">
        UPDATE smart_user
        SET password = #{password},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 根据租户ID查询用户列表 -->
    <select id="selectByTenantId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM smart_user
        WHERE tenant_id = #{tenantId}
        AND del_flag = '0'
        ORDER BY create_time DESC
    </select>

    <!-- 统计用户总数 -->
    <select id="countUsers" resultType="long">
        SELECT COUNT(1)
        FROM smart_user
        WHERE del_flag = '0'
    </select>

    <!-- 根据状态统计用户数量 -->
    <select id="countUsersByStatus" resultType="long">
        SELECT COUNT(1)
        FROM smart_user
        WHERE status = #{status}
        AND del_flag = '0'
    </select>

    <!-- 根据部门ID统计用户数量 -->
    <select id="countUsersByDeptId" resultType="long">
        SELECT COUNT(1)
        FROM smart_user
        WHERE dept_id = #{deptId}
        AND del_flag = '0'
    </select>

    <!-- 根据租户ID统计用户数量 -->
    <select id="countUsersByTenantId" resultType="long">
        SELECT COUNT(1)
        FROM smart_user
        WHERE tenant_id = #{tenantId}
        AND del_flag = '0'
    </select>

</mapper>
