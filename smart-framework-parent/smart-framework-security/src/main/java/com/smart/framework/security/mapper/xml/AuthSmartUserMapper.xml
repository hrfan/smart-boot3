<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smart.framework.security.mapper.AuthSmartUserMapper">

    <!-- 用户信息结果映射 -->
    <resultMap id="BaseResultMap" type="com.smart.framework.security.entity.AuthSmartUser">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="dept_id" property="deptId" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="user_type" property="userType" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phonenumber" property="phonenumber" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="CHAR"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="CHAR"/>
        <result column="del_flag" property="delFlag" jdbcType="CHAR"/>
        <result column="login_ip" property="loginIp" jdbcType="VARCHAR"/>
        <result column="login_date" property="loginDate" jdbcType="TIMESTAMP"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="create_user_name" property="createUserName" jdbcType="VARCHAR"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="update_user_name" property="updateUserName" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="tenant_id" property="tenantId" jdbcType="VARCHAR"/>
    </resultMap>




    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        id, dept_id, user_name, nick_name, user_type, email, phonenumber, sex, avatar, password,
        status, del_flag, login_ip, login_date, create_by, create_time, create_user_name,
        update_by, update_time, update_user_name, remark, tenant_id
    </sql>


    <!-- 菜单权限结果映射 -->
    <resultMap id="Base_Permission_ResultMap" type="com.smart.framework.security.entity.AuthSmartPermission">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="menu_name" property="menuName" jdbcType="VARCHAR"/>
        <result column="parent_id" property="parentId" jdbcType="BIGINT"/>
        <result column="order_num" property="orderNum" jdbcType="INTEGER"/>
        <result column="path" property="path" jdbcType="VARCHAR"/>
        <result column="component" property="component" jdbcType="VARCHAR"/>
        <result column="query" property="query" jdbcType="VARCHAR"/>
        <result column="route_name" property="routeName" jdbcType="VARCHAR"/>
        <result column="is_frame" property="isFrame" jdbcType="VARCHAR"/>
        <result column="frame_url" property="frameUrl" jdbcType="VARCHAR"/>
        <result column="is_cache" property="isCache" jdbcType="VARCHAR"/>
        <result column="menu_type" property="menuType" jdbcType="VARCHAR"/>
        <result column="visible" property="visible" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="perms" property="perms" jdbcType="VARCHAR"/>
        <result column="icon" property="icon" jdbcType="VARCHAR"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="create_user_name" property="createUserName" jdbcType="VARCHAR"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="update_user_name" property="updateUserName" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="is_leaf" property="isLeaf" jdbcType="TINYINT"/>
        <result column="always_show" property="alwaysShow" jdbcType="TINYINT"/>
        <result column="color" property="color" jdbcType="VARCHAR"/>
        <result column="default_shortcut_menu" property="defaultShortcutMenu" jdbcType="VARCHAR"/>
        <result column="reminder_menu" property="reminderMenu" jdbcType="VARCHAR"/>
        <result column="tenant_menu" property="tenantMenu" jdbcType="VARCHAR"/>
        <result column="allow_visitor_access" property="allowVisitorAccess" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="Base_Permission_Column_List">
        id, menu_name, parent_id, order_num, path, component, query, route_name, is_frame, frame_url,
        is_cache, menu_type, visible, status, perms, icon, create_by, create_time, create_user_name,
        update_by, update_time, update_user_name, remark, is_leaf, always_show, color, default_shortcut_menu,
        reminder_menu, tenant_menu, allow_visitor_access
    </sql>


    <select id="findByUserId" resultType="java.lang.String">
        select
            distinct
            perms
        from
            smart_permission p
                left join  smart_role_permission rp on p.id = rp.permission_id
                left join smart_role r on rp.role_id = r.id
                left join smart_user_role ur on r.id = ur.role_id
                left join smart_user u on ur.user_id = u.id
        where u.id = #{id}
          and perms is not null
          and perms != ''
    </select>

    <!-- 根据用户ID查询用户角色列表 -->
    <select id="findRolesByUserId" resultType="java.lang.String">
        select
            distinct
            r.role_key
        from
            smart_role r
                left join smart_user_role ur on r.id = ur.role_id
                left join smart_user u on ur.user_id = u.id
        where u.id = #{userId}
          and r.status = '0'
          and r.del_flag = '0'
        order by r.role_sort asc
    </select>

    <!-- 根据用户ID查询用户菜单权限列表 -->
    <select id="findMenusByUserId" resultMap="Base_Permission_ResultMap">
        select
            distinct
            p.id,
            p.menu_name,
            p.parent_id,
            p.order_num,
            p.path,
            p.component,
            p.query,
            p.route_name,
            p.is_frame,
            p.frame_url,
            p.is_cache,
            p.menu_type,
            p.visible,
            p.status,
            p.perms,
            p.icon,
            p.create_by,
            p.create_time,
            p.create_user_name,
            p.update_by,
            p.update_time,
            p.update_user_name,
            p.remark,
            p.is_leaf,
            p.always_show,
            p.color,
            p.default_shortcut_menu,
            p.reminder_menu,
            p.tenant_menu,
            p.allow_visitor_access
        from
            smart_permission p
                left join smart_role_permission rp on p.id = rp.permission_id
                left join smart_role r on rp.role_id = r.id
                left join smart_user_role ur on r.id = ur.role_id
                left join smart_user u on ur.user_id = u.id
        where u.id = #{userId}
          and p.status = '0'
          and p.menu_type in ('M', 'C')
          and p.visible = '0'
        order by p.order_num asc
    </select>

</mapper>
